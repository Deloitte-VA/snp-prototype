<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
        <relativePath />
    </parent>

    <groupId>com.github.jlgrock.snp</groupId>
    <artifactId>snp</artifactId>
    <version>0.2</version>

    <packaging>pom</packaging>
    <name>snp</name>
    <url>https://github.com/jlgrock/snp-prototype</url>
    <description>Symantic Normalization Prototype: A simple proof of concept of ingesting and processing Health Ontologies into a mongoDB instance.</description>

    <issueManagement>
        <url>https://snp-prototype.atlassian.net</url>
        <system>JIRA</system>
    </issueManagement>

    <licenses>
        <license>
            <name>TBD</name>
            <url />
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>http://github.com/jlgrock/snp-prototype</url>
        <connection>scm:git:git://github.com/jlgrock/snp-prototype.git</connection>
        <developerConnection>scm:git:git@github.com:jlgrock/snp-prototype.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <ciManagement>
        <system>Travis-CI</system>
    </ciManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <project.rootdir>${project.basedir}</project.rootdir>
        <source.jdk>1.8</source.jdk>
        <target.jdk>1.8</target.jdk>

        <jackson.version>2.5.0</jackson.version>
        <slf4j.version>1.7.9</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <mongo.driver.version>2.13.0-rc1</mongo.driver.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.8</mockito.version>
        <hk2.version>2.4.0-b10</hk2.version>
        <guava.version>18.0</guava.version>
        <jersey.version>2.17</jersey.version>
        <jersey-json.version>1.19</jersey-json.version>
        <testng.version>6.8.21</testng.version>
        <hk2testing.version>2.4.0-b11</hk2testing.version>
        <jackson-jaxrs-json-provider.version>2.5.1</jackson-jaxrs-json-provider.version>
        <vha-isaac-logic.version>1.4</vha-isaac-logic.version>
        <commons-io.version>2.4</commons-io.version>
        
        <jetty-plugin.version>9.3.0.M1</jetty-plugin.version>
        <findbugs-maven-plugin.version>3.0.0</findbugs-maven-plugin.version>
        <pmd-maven-plugin.version>3.4</pmd-maven-plugin.version>
        <cobertura-maven-plugin.version>2.6</cobertura-maven-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
        <maven-war-plugin.version>2.5</maven-war-plugin.version>
        <maven-javadoc-plugin.version>2.10.1</maven-javadoc-plugin.version>
        <maven-release-plugin.version>2.5.1</maven-release-plugin.version>
        <maven-checkstyle-plugin.version>2.14</maven-checkstyle-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- internal dependencies -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>apis</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>defaultconfig</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- external dependencies -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo.driver.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2</artifactId>
                <version>${hk2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

            <dependency>
                <groupId>gov.vha.isaac</groupId>
                <artifactId>logic</artifactId>
                <version>${vha-isaac-logic.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.jersey.media</groupId>
                        <artifactId>jersey-media-moxy</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.glassfish.jersey.media</groupId>
                        <artifactId>jersey-common</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        
            <!-- Jackson Dependencies -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson-jaxrs-json-provider.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Jersey Dependencies -->
            <dependency>
                <groupId>org.glassfish.jersey.test-framework</groupId>
                <artifactId>jersey-test-framework-core</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                <artifactId>jersey-test-framework-provider-jetty</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <!-- When you need to bind to the console -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Testing dependencies -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-testng</artifactId>
                <version>${hk2testing.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- External dependencies for all projects -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>


        <!-- Testing dependencies for all projects -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-testng</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <modules>
        <module>apis</module>
        <module>defaultconfig</module>
        <module>core</module>
        <module>web</module>
        <!--<module>client</module>-->
        <!--<module>integration</module>-->
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.glassfish.hk2</groupId>
                    <artifactId>hk2-inhabitant-generator</artifactId>
                    <version>2.4.0-b11</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate-inhabitants</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${source.jdk}</source>
                        <target>${target.jdk}</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <argLine>-Xmx512m</argLine>
                        <includes>
                            <!-- By default only files ending in 'Test' will be included, so also include support for Spock style naming convention -->
                            <!-- Oddly enough for Groovy files, *Spec.groovy does not work, but *Spec.java does -->
                            <include>**/*Test.java</include>
                            <include>**/*Spec.java</include>
                        </includes>
                    </configuration>
                </plugin>

                <!-- Generate Java Doc jar -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Check Style: Make sure that it matches basic formatting and usage requirements -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>${project.rootdir}/checkstyle.xml</configLocation>
                        <failsOnError>true</failsOnError>
                        <consoleOutput>true</consoleOutput>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <!-- This needs to be upgraded, but there is a bug with using > 6.0 with this version of the
                    plugin.  Also, we are disabling "Illegal -->
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>5.9</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- COBERTURA: Code Coverage Check -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>${cobertura-maven-plugin.version}</version>
                    <configuration>
                        <check>
                            <haltOnFailure>false</haltOnFailure>
                        </check>
                        <formats>
                            <format>html</format>
                        </formats>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>clean</goal>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- FINDBUGS CHECK: Fails build if there are "High" threshold violations -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs-maven-plugin.version}</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Medium</threshold>
                        <xmlOutput>true</xmlOutput>
                        <failOnError>true</failOnError>\
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- PMD CHECK: Fails build if there are "High" priority violations -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${pmd-maven-plugin.version}</version>
                    <configuration>
                        <targetJdk>${target.jdk}</targetJdk>
                        <failurePriority>1</failurePriority>
                        <failOnViolation>true</failOnViolation>
                        <aggregate>true</aggregate>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Generate inhabitant file for HK2 -->
            <plugin>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-inhabitant-generator</artifactId>
            </plugin>

            <!-- compiler adjustments-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Configure Test running -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Generate Java Doc jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>codeQuality</id>
            <build>
                <plugins>

                    <!-- Check the project for issues in style guidelines -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                    </plugin>

                    <!-- check for significant bugs that might have been missed in development -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                    </plugin>

                    <!-- check for significant bugs that might have been missed in development -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integrationTests</id>
            <modules>
                <module>integration</module>
            </modules>
        </profile>
    </profiles>
</project>


